spring:
  application:
    name: backend

  datasource:
    url: jdbc:mysql://${PROD_DB_HOST}:${PROD_DB_PORT}/${PROD_DB_NAME}?useSSL=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${PROD_DB_USERNAME}
    password: ${PROD_DB_PASSWORD}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.MySQLDialect
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

  h2:
    console:
      enabled: false

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: ${KAKAO_REDIRECT_URI}
            client-name: Kakao
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

jwt:
  secret: ${JWT_SECRET}
  access-token-validity-in-seconds: 86400 # @TODO: 30분으로 변경 (카카오 oauth 무한 요청으로 인한 문제로 24H)
  refresh-token-validity-in-seconds: 604800

app:
  oauth2:
    authorized-redirect-uri: https://re-career.vercel.app/oauth2/redirect

cors:
  allowed-origins: "http://localhost:3000,https://localhost:3000,http://localhost:8080,https://localhost:8080,http://localhost:8081,https://localhost:8081,https://re-career.vercel.app,https://re-career.onrender.com"

aws:
  s3:
    access-key: ${AWS_ACCESS_KEY}
    secret-key: ${AWS_SECRET_KEY}
    region: ${AWS_REGION:ap-northeast-2}
    bucket: ${AWS_S3_BUCKET}
    audio-folder: ${AWS_S3_AUDIO_FOLDER}

logging:
  level:
    org.springframework.security: WARN
    com.recareer.backend: INFO
    org.hibernate.SQL: WARN
    root: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
